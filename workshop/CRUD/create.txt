use person

#Create data
db.person.insert(
{
    "name": "somkiat",
    "age": 35,
    "status": "A",
    "groups": [ "news", "sport" ]
}
)


#Query data
db.person.find()
db.person.find().pretty()

#Array of documents
var datas = 
[
    {
        "name": "somkiat",
        "age": 35,
        "status": "A",
        "groups": [ "news", "sport" ]
    },
    {
        "name": "other",
        "age": 40,
        "status": "A",
        "groups": [ "news", "sport" ]
    }
]

db.person.insert(datas)

#Insert existing document
db.person.insert(
{
    "_id": ObjectId("573825f86bed005acccb5113"),
    "name": "somkiat",
    "age": 35,
    "status": "A",
    "groups": [ "news", "sport" ]
}
)

#Insert in unordered
#With unordered inserts, if an error occurs during an insert of #one of the documents

db.person.insert(
   [
     { _id: 1, name: "people 1"},
     { _id: 2, name: "people 2"},
     { _id: 3, name: "people 3"}
   ],
   { ordered: false }
)

db.person.insert(
   [
     { _id: 1, name: "people 1"},
     { _id: 4, name: "people 4"},
     { _id: 3, name: "people 3"}
   ],
   { ordered: false }
)

db.person.insert(
   [
     { _id: 1, name: "people 1"},
     { _id: 5, name: "people 5"},
     { _id: 3, name: "people 3"}
   ],
   { ordered: true }
)


//Create multiple docs with Bulk
var bulk = db.person.initializeUnorderedBulkOp()

var bulk = db.person.initializeOrderedBulkOp()

bulk.insert( { _id: 1, name: "people 1"} )
bulk.insert( { _id: 2, name: "people 2"} )
bulk.insert( { _id: 3, name: "people 3"} )

bulk.execute()


//Multiple operation with bulk => insert, update, delete
var bulk = db.users.initializeOrderedBulkOp()

bulk.insert( { user: "somkiat", status: "A", points: 0 } )
bulk.insert( { user: "up1", status: "A", points: 0 } )
bulk.insert( { user: "pui", status: "P", points: 0 } )
bulk.find( { status: "D" } ).remove()
bulk.find( { status: "P" } ).update( { $set: { comment: "Pending" } } )

bulk.execute()

